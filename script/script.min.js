gsap.registerPlugin(ScrollTrigger, Flip); const wrapper = document.querySelector(".flashlight__text"); if (wrapper) { const t = document.querySelector(".flashlight__background-text"); let e, r = window.innerWidth > 2e3 ? 250 : vw(11), o = window.innerWidth > 2e3 ? "250px" : "11vw", i = 0; function autoAnimationCircle() { e = gsap.timeline({ onComplete: autoAnimationCircle }), e.to(".flashlight__background-text", { clipPath: `circle(${o} at ${randomIntFromInterval(r, wrapper.offsetWidth - r)}px ${randomIntFromInterval(r, wrapper.offsetHeight - r)}px)`, duration: 3, delay: i, ease: "expoScale(0.5,7,none)" }), i = 3 } function move(t) { let e = t.offsetX, i = t.offsetY; e > wrapper.clientWidth - r ? e = wrapper.clientWidth - r : e < r && (e = r), i > wrapper.clientHeight - r ? i = wrapper.clientHeight - r : i < r && (i = r), gsap.to(".flashlight__background-text", { clipPath: `circle(${o} at ${e}px ${i}px)`, duration: 1 }) } function mouseoverFunction(t) { wrapper.addEventListener("mousemove", move), e.pause() } function mouseoutFunction(t) { wrapper.removeEventListener("mousemove", move), e.revert(), autoAnimationCircle() } function randomIntFromInterval(t, e) { return Math.floor(Math.random() * (e - t + 1) + t) } function vw(t) { return t * Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 100 } t.style.cssText = `clip-path:circle(${o} at 130px 130px);`, autoAnimationCircle(), window.addEventListener("resize", (t => { r = window.innerWidth > 2e3 ? 250 : vw(11), o = window.innerWidth > 2e3 ? "250px" : "11vw", window.innerWidth > 992 ? (wrapper.addEventListener("mouseover", mouseoverFunction), wrapper.addEventListener("mouseout", mouseoutFunction)) : (wrapper.removeEventListener("mouseover", mouseoverFunction), wrapper.removeEventListener("mouseout", mouseoutFunction)) })), window.innerWidth > 992 && (wrapper.addEventListener("mouseover", mouseoverFunction), wrapper.addEventListener("mouseout", mouseoutFunction)), wrapper.addEventListener("mousemove", move) } const textBlock = document.querySelector(".amin-letters"), wrapperTextBlock = document.querySelector(".flying-letters "); if (textBlock) { splitText(textBlock).querySelectorAll(".letter").forEach(((t, e) => { gsap.from(t, 2.5, { opacity: 0, scale: .1, x: random(-500, 500), y: random(-500, 500), z: random(-500, 500), delay: .02 * e }) })), wrapperTextBlock.classList.add("_show") } function splitText(t) { return t.innerHTML = t.textContent.replace(/(\S*)/g, (t => '<div class="word">' + t.replace(/(-|#|@)?\S(-|#|@)?/g, "<div class='letter'>$&</div>") + "</div>")), t } function random(t, e) { return Math.random() * (e - t) + t } let flip, flipTwo, trigger, trigger2; function anim() { if (document.querySelector(".setion-title__box")) { flip && flip.revert(), flipTwo && flipTwo.revert(), trigger && trigger.revert(), trigger2 && trigger2.revert(); const t = document.querySelector(".main__decor"), e = document.querySelector(".setion-title__flip-block"), r = document.querySelector(".setion-title__box"), o = document.querySelector(".section-fulsscreen__flip-block"), i = document.querySelector(".flip-element"); t.appendChild(i), r.appendChild(e), i.style.cssText = "", e.style.cssText = ""; const n = Flip.getState(i, { props: "transform" }); e.appendChild(i), flip = Flip.from(n, { absolute: !0 }), trigger = ScrollTrigger.create({ trigger: ".main__decor", start: "-20% top", endTrigger: r, end: "top top", scrub: !0, animation: flip, onLeave: () => { const t = Flip.getState(i, { props: "transform, widht, height" }); o.appendChild(i), flipTwo = Flip.from(t, { absolute: !0 }), trigger2 = ScrollTrigger.create({ trigger: ".setion-title__flip-block", start: "top top", endTrigger: o, end: "bottom bottom", scrub: !0, animation: flipTwo }) }, onLeaveBack: () => { const t = Flip.getState(i, { props: "transform, widht, height" }); o.appendChild(i), flipTwo = Flip.from(t, { absolute: !0 }), trigger2 = ScrollTrigger.create({ trigger: ".setion-title__flip-block", start: "top top", endTrigger: o, end: "bottom bottom", scrub: !0, animation: flipTwo }) }, onEnterBack: () => { flipTwo && flipTwo.revert(), trigger2 && trigger2.revert(), e.appendChild(i) }, onEnter: () => { flipTwo && flipTwo.revert(), trigger2 && trigger2.revert(), e.appendChild(i) } }) } } if (anim(), window.addEventListener("resize", anim), frames = document.getElementsByClassName("frame"), frames) { let n, a = Array.from(frames), l = [], p = -1e3; function initTlSlider() { n = gsap.timeline({ scrollTrigger: { trigger: ".slide-wrapper", start: "top top", end: 3e3, scrub: 1, pin: !0 } }).to(".frame1", { translateZ: 500, duration: .7 }).to(".frame1", { opacity: 0, duration: .3 }).to(".frame2", { translateZ: 500, duration: 1.7 }, "-=1").to(".frame2", { opacity: 0, duration: .3 }).to(".frame3", { translateZ: 500, duration: 2.7 }, "-=2").to(".frame3", { opacity: 0, duration: .3 }).to(".frame4", { translateZ: 500, duration: 3.7 }, "-=3").to(".frame4", { opacity: 0, duration: .3 }).to(".frame5", { translateZ: 500, duration: 4.7 }, "-=4").to(".frame5", { opacity: 0, duration: .3 }).to(".frame6", { translateZ: 500, duration: 5.7 }, "-=5").to(".frame6", { opacity: 0, duration: .3 }).to(".frame7", { translateZ: 500, duration: 6.7 }, "-=6").to(".frame7", { opacity: 0, duration: .3 }).to(".frame8", { translateZ: 500, duration: 7.7 }, "-=7").to(".frame8", { opacity: 0, duration: .3 }).to(".frame9", { translateZ: 500, duration: 8.7 }, "-=8").to(".frame9", { opacity: 0, duration: .3 }).to(".frame10", { translateZ: 500, duration: 9.7 }, "-=9").to(".frame10", { opacity: 0, duration: .3 }).to(".frame11", { translateZ: 500, duration: 10.7 }, "-=10").to(".frame11", { opacity: 0, duration: .3 }).to(".frame12", { translateZ: 500, duration: 11.7 }, "-=11").to(".frame12", { opacity: 0, duration: .3 }).to(".frame13", { translateZ: 500, duration: 12.7 }, "-=12").to(".frame13", { opacity: 0, duration: .3 }).to(".frame14", { translateZ: 500, duration: 13.7 }, "-=13").to(".frame14", { opacity: 0, duration: .3 }).to(".frame15", { translateZ: 500, duration: 14.7 }, "-=14").to(".frame15", { opacity: 0, duration: .3 }).to(".frame16", { translateZ: 0, duration: 15.7 }, "-=15") } a.forEach((function (t, e) { l.push(e * p + p); let r = `translateZ(${l[e]}px)`; t.style.transform = r, t.style.opacity = l[e] > 700 ? 0 : 1 })), initTlSlider() }