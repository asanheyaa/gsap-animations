gsap.registerPlugin(ScrollTrigger, Flip); const wrapper = document.querySelector(".flashlight__text"); if (wrapper) { let e = document.querySelector(".flashlight__background-text"), t = window.innerWidth > 2e3 ? 250 : c(11), r = window.innerWidth > 2e3 ? "250px" : "11vw", i = 0, o; function n() { (o = gsap.timeline({ onComplete: n })).to(".flashlight__background-text", { clipPath: `circle(${r} at ${s(t, wrapper.offsetWidth - t)}px ${s(t, wrapper.offsetHeight - t)}px)`, duration: 3, delay: i, ease: "expoScale(0.5,7,none)" }), i = 3 } function l(e) { let i = e.offsetX, o = e.offsetY; i > wrapper.clientWidth - t ? i = wrapper.clientWidth - t : i < t && (i = t), o > wrapper.clientHeight - t ? o = wrapper.clientHeight - t : o < t && (o = t), gsap.to(".flashlight__background-text", { clipPath: `circle(${r} at ${i}px ${o}px)`, duration: 1 }) } function p(e) { wrapper.addEventListener("mousemove", l), o.pause() } function a(e) { wrapper.removeEventListener("mousemove", l), o.revert(), n() } function s(e, t) { return Math.floor(Math.random() * (t - e + 1) + e) } function c(e) { return e * Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 100 } e.style.cssText = `clip-path:circle(${r} at 130px 130px);`, n(), window.addEventListener("resize", e => { t = window.innerWidth > 2e3 ? 250 : c(11), r = window.innerWidth > 2e3 ? "250px" : "11vw", window.innerWidth > 992 ? (wrapper.addEventListener("mouseover", p), wrapper.addEventListener("mouseout", a)) : (wrapper.removeEventListener("mouseover", p), wrapper.removeEventListener("mouseout", a)) }), window.innerWidth > 992 && (wrapper.addEventListener("mouseover", p), wrapper.addEventListener("mouseout", a)) } const textBlock = document.querySelector(".amin-letters"), wrapperTextBlock = document.querySelector(".flying-letters "); if (textBlock) { let d = splitText(textBlock).querySelectorAll(".letter"); d.forEach((e, t) => { gsap.from(e, 2.5, { opacity: 0, scale: .1, x: random(-500, 500), y: random(-500, 500), z: random(-500, 500), delay: .02 * t }) }), wrapperTextBlock.classList.add("_show") } function splitText(e) { return e.innerHTML = e.textContent.replace(/(\S*)/g, e => '<div class="word">' + e.replace(/(-|#|@)?\S(-|#|@)?/g, "<div class='letter'>$&</div>") + "</div>"), e } function random(e, t) { return Math.random() * (t - e) + e } let flip, flipTwo, trigger, trigger2; function anim() { if (document.querySelector(".setion-title__box")) { flip && flip.revert(), flipTwo && flipTwo.revert(), trigger && trigger.revert(), trigger2 && trigger2.revert(); let e = document.querySelector(".main__decor"), t = document.querySelector(".setion-title__flip-block"), r = document.querySelector(".setion-title__box"), i = document.querySelector(".section-fulsscreen__flip-block"), o = document.querySelector(".flip-element"); e.appendChild(o), r.appendChild(t), o.style.cssText = "", t.style.cssText = ""; let n = Flip.getState(o, { props: "transform" }); t.appendChild(o), flip = Flip.from(n, { absolute: !0 }), trigger = ScrollTrigger.create({ trigger: ".main__decor", start: "-20% top", endTrigger: r, end: "top top", scrub: !0, animation: flip, onLeave() { let e = Flip.getState(o, { props: "transform, widht, height" }); i.appendChild(o), flipTwo = Flip.from(e, { absolute: !0 }), trigger2 = ScrollTrigger.create({ trigger: ".setion-title__flip-block", start: "top top", endTrigger: i, end: "bottom bottom", scrub: !0, animation: flipTwo }) }, onLeaveBack() { let e = Flip.getState(o, { props: "transform, widht, height" }); i.appendChild(o), flipTwo = Flip.from(e, { absolute: !0 }), trigger2 = ScrollTrigger.create({ trigger: ".setion-title__flip-block", start: "top top", endTrigger: i, end: "bottom bottom", scrub: !0, animation: flipTwo }) }, onEnterBack() { flipTwo && flipTwo.revert(), trigger2 && trigger2.revert(), t.appendChild(o) }, onEnter() { flipTwo && flipTwo.revert(), trigger2 && trigger2.revert(), t.appendChild(o) } }) } } anim(), window.addEventListener("resize", anim);